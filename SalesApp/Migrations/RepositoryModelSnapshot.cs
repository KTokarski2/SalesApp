// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SalesApp.Models;

#nullable disable

namespace SalesApp.Migrations
{
    [DbContext(typeof(Repository))]
    partial class RepositoryModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SalesApp.Models.Customer", b =>
                {
                    b.Property<int>("CustomerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerID"));

                    b.Property<string>("Address1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerID")
                        .HasName("Customer_pk");

                    b.ToTable("Customer", (string)null);
                });

            modelBuilder.Entity("SalesApp.Models.Invoice", b =>
                {
                    b.Property<int>("InvoiceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InvoiceID"));

                    b.HasKey("InvoiceID")
                        .HasName("Invoice_pk");

                    b.ToTable("Invoice", (string)null);
                });

            modelBuilder.Entity("SalesApp.Models.Order", b =>
                {
                    b.Property<int>("OrderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderID"));

                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<int>("InvoiceID")
                        .HasColumnType("int");

                    b.Property<int>("OrderStatusID")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("money");

                    b.HasKey("OrderID")
                        .HasName("Order_pk");

                    b.HasIndex("CustomerID");

                    b.HasIndex("InvoiceID");

                    b.HasIndex("OrderStatusID");

                    b.ToTable("Order", (string)null);
                });

            modelBuilder.Entity("SalesApp.Models.OrderLine", b =>
                {
                    b.Property<int>("OrderLineID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderLineID"));

                    b.Property<int>("OrderID")
                        .HasColumnType("int");

                    b.Property<int>("Order_OrderLines")
                        .HasColumnType("int");

                    b.Property<int>("ProductID")
                        .HasColumnType("int");

                    b.Property<int>("Product_OrderLines")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("OrderLineID")
                        .HasName("OrderLine_pk");

                    b.HasIndex("Order_OrderLines");

                    b.HasIndex("Product_OrderLines");

                    b.ToTable("OrderLine", (string)null);
                });

            modelBuilder.Entity("SalesApp.Models.OrderStatus", b =>
                {
                    b.Property<int>("OrderStatusID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderStatusID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OrderStatusID")
                        .HasName("OrderStatus_pk");

                    b.ToTable("OrderStatus", (string)null);
                });

            modelBuilder.Entity("SalesApp.Models.Product", b =>
                {
                    b.Property<int>("ProductID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("Price")
                        .HasColumnType("money");

                    b.HasKey("ProductID")
                        .HasName("Product_pk");

                    b.ToTable("Product", (string)null);
                });

            modelBuilder.Entity("SalesApp.Models.Warehouse", b =>
                {
                    b.Property<int>("WarehouseID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WarehouseID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductID")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("WarehouseID")
                        .HasName("Warehouse_pk");

                    b.HasIndex("ProductID");

                    b.ToTable("Warehouse", (string)null);
                });

            modelBuilder.Entity("SalesApp.Models.Order", b =>
                {
                    b.HasOne("SalesApp.Models.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("Customer_Orders");

                    b.HasOne("SalesApp.Models.Invoice", "Invoice")
                        .WithMany("Orders")
                        .HasForeignKey("InvoiceID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("Invoice_Orders");

                    b.HasOne("SalesApp.Models.OrderStatus", "OrderStatus")
                        .WithMany("Orders")
                        .HasForeignKey("OrderStatusID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("OrderStatus_Orders");

                    b.Navigation("Customer");

                    b.Navigation("Invoice");

                    b.Navigation("OrderStatus");
                });

            modelBuilder.Entity("SalesApp.Models.OrderLine", b =>
                {
                    b.HasOne("SalesApp.Models.Order", "Order")
                        .WithMany("OrderLines")
                        .HasForeignKey("Order_OrderLines")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SalesApp.Models.Product", "Product")
                        .WithMany("OrderLines")
                        .HasForeignKey("Product_OrderLines")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("SalesApp.Models.Warehouse", b =>
                {
                    b.HasOne("SalesApp.Models.Product", "Product")
                        .WithMany("Warehouses")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("Product_Warehouses");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("SalesApp.Models.Customer", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("SalesApp.Models.Invoice", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("SalesApp.Models.Order", b =>
                {
                    b.Navigation("OrderLines");
                });

            modelBuilder.Entity("SalesApp.Models.OrderStatus", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("SalesApp.Models.Product", b =>
                {
                    b.Navigation("OrderLines");

                    b.Navigation("Warehouses");
                });
#pragma warning restore 612, 618
        }
    }
}
